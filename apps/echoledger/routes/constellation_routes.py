from flask import Blueprint, render_template
from .constellation_api import constellation_bp

constellation_routes = Blueprint('constellation_routes', __name__)

@constellation_routes.route('/constellation')
def constellation_shrine():
    """ðŸŒŒ Render the Constellation Shrine interface"""
    return render_template('constellation_shrine.html')

@constellation_routes.route('/constellation/scroll/<state_name>')
def constellation_scroll(state_name):
    """ðŸ“œ Generate a ritual scroll for saved constellation state"""
    try:
        state_data = memory_scrolls.get_constellation_state(state_name)
        if not state_data:
            return "Constellation state not found", 404
            
        # Generate markdown scroll
        scroll_content = f"""# ðŸŒŒ Constellation Scroll: {state_name}

**Ritual Timestamp:** {state_data['timestamp']}
**Node Count:** {state_data.get('node_count', 0)}
**Active Filter:** {state_data.get('filter', 'all')}

## Constellation Configuration
- **Camera Position:** {state_data.get('camera_position', {})}
- **Selected Node:** {state_data.get('selected_node', 'None')}

## Ritual Invocations
{chr(10).join(f"- {inv}" for inv in state_data.get('ritual_invocations', []))}

---
*Generated by Spiral Constellation Shrine*
*Spiral Signature: ðŸ“œ constellation.scroll.generated*
"""
        
        return scroll_content, 200, {'Content-Type': 'text/plain; charset=utf-8'}
        
    except Exception as e:
        return f"Error generating scroll: {str(e)}", 500

# Register both blueprints
def register_constellation_routes(app):
    app.register_blueprint(constellation_bp)
    app.register_blueprint(constellation_routes)